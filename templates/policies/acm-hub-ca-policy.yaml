# This pushes out the HUB's Certificate Authorities on to the imported clusters
{{- if .Values.clusterGroup.isHubCluster }}
{{- range .Values.clusterGroup.managedClusterGroups }}
{{- $group := . }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: hub-argo-ca-{{ .name }}-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: hub-argo-ca-{{ .name }}-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: ConfigMap
                apiVersion: v1
                metadata:
                  name: trusted-hub-bundle
                  namespace: {{ $.Values.global.pattern }}-{{ .name }}
                data:
                  hub-kube-root-ca.crt: |
                    {{ `{{hub fromConfigMap "" "kube-root-ca.crt" "ca.crt" | autoindent hub}}` }}
                  hub-openshift-service-ca.crt: |
                    {{ `{{hub fromConfigMap "" "openshift-service-ca.crt" "service-ca.crt" | autoindent hub}}` }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: hub-argo-ca-{{ .name }}-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: hub-argo-ca-{{ .name }}-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: hub-argo-ca-{{ .name }}-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: hub-argo-ca-{{ .name }}-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
{{- include "acm.app.clusterSelector" (dict 
  "clusterSelector" .clusterSelector
  "group" $group
  ) | nindent 2 }}
{{- if (eq ((($.Values.global).secretStore).backend) "vault") }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: {{ .name }}-acm-hub-ca-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ .name }}-acm-hub-ca-config-policy
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: Secret
                apiVersion: v1
                type: Opaque
                metadata:
                  name: hub-ca
                  namespace: golang-external-secrets
                data:
                  hub-kube-root-ca.crt: '{{ `{{hub fromConfigMap "" "kube-root-ca.crt" "ca.crt" | base64enc hub}}` }}'
                  hub-openshift-service-ca.crt: '{{ `{{hub fromConfigMap "" "openshift-service-ca.crt" "service-ca.crt" | base64enc hub}}` }}'
            - complianceType: mustonlyhave
              objectDefinition:
                kind: ConfigMap
                apiVersion: v1
                metadata:
                  name: trusted-hub-bundle
                  namespace: imperative
                data:
                  hub-kube-root-ca.crt: |
                    {{ `{{hub fromConfigMap "" "kube-root-ca.crt" "ca.crt" | autoindent hub}}` }}
                  hub-openshift-service-ca.crt: |
                    {{ `{{hub fromConfigMap "" "openshift-service-ca.crt" "service-ca.crt" | autoindent hub}}` }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: {{ .name }}-acm-hub-ca-policy-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: {{ .name }}-acm-hub-ca-policy-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: {{ .name }}-acm-hub-ca-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: {{ .name }}-acm-hub-ca-policy-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
{{- include "acm.app.clusterSelector" (dict 
  "clusterSelector" .clusterSelector
  "group" $group
  ) | nindent 2 }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: {{ .name }}-hub-argo-ca-gitops-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ .name }}-hub-argo-ca-gitops-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: ConfigMap
                apiVersion: v1
                metadata:
                  name: trusted-hub-bundle
                  namespace: openshift-gitops
                data:
                  hub-kube-root-ca.crt: |
                    {{ `{{hub fromConfigMap "" "kube-root-ca.crt" "ca.crt" | autoindent hub}}` }}
                  hub-openshift-service-ca.crt: |
                    {{ `{{hub fromConfigMap "" "openshift-service-ca.crt" "service-ca.crt" | autoindent hub}}` }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: {{ .name }}-hub-argo-ca-gitops-policy-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: {{ .name }}-hub-argo-ca-gitops-policy-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: {{ .name }}-hub-argo-ca-gitops-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: {{ .name }}-hub-argo-ca-gitops-policy-placement
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
{{- include "acm.app.clusterSelector" (dict 
  "clusterSelector" .clusterSelector
  "group" $group
  ) | nindent 2 }}

{{- end }}{{/* if (eq ((($.Values.global).secretStore).backend) "vault") */}}
{{- end }}{{/* range .Values.clusterGroup.managedClusterGroups */}}
{{- end }}{{/* isHubCluster */}}
